// <auto-generated />
using cendracine.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace cendracine.Migrations
{
    [DbContext(typeof(DbHandler))]
    [Migration("20180528162849_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("cendracine.Models.Billboard", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("BeginDate");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("EndDate");

                    b.Property<string>("Name");

                    b.Property<Guid?>("OwnerId");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Billboards");
                });

            modelBuilder.Entity("cendracine.Models.BillboardMovieRegister", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("BillboardId");

                    b.Property<Guid?>("MovieId");

                    b.Property<int>("TicketsPurchased");

                    b.HasKey("Id");

                    b.HasIndex("BillboardId");

                    b.HasIndex("MovieId");

                    b.ToTable("BillboardMovieRegisters");
                });

            modelBuilder.Entity("cendracine.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("cendracine.Models.Movie", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cover")
                        .HasMaxLength(1000);

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<Guid?>("OwnerId");

                    b.Property<float>("Rating");

                    b.Property<int>("RecommendedAge");

                    b.Property<string>("Synopsis")
                        .HasMaxLength(1000);

                    b.Property<string>("Trailer")
                        .HasMaxLength(1000);

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("cendracine.Models.MovieCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("CategoryId");

                    b.Property<Guid?>("MovieId");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieCategories");
                });

            modelBuilder.Entity("cendracine.Models.Projection", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("MovieId");

                    b.Property<DateTime>("ProjectionDate");

                    b.Property<Guid?>("TheaterId");

                    b.HasKey("Id");

                    b.HasIndex("MovieId");

                    b.HasIndex("TheaterId");

                    b.ToTable("Projections");
                });

            modelBuilder.Entity("cendracine.Models.Reservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DateReservated");

                    b.Property<Guid?>("OwnerId");

                    b.Property<float>("Price");

                    b.Property<Guid?>("ProjectionId");

                    b.Property<Guid?>("SeatId");

                    b.Property<bool>("Status");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.HasIndex("ProjectionId");

                    b.HasIndex("SeatId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("cendracine.Models.Seat", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("RowNumber");

                    b.Property<int>("SeatNumber");

                    b.Property<Guid?>("TheaterId");

                    b.HasKey("Id");

                    b.HasIndex("TheaterId");

                    b.ToTable("Seats");
                });

            modelBuilder.Entity("cendracine.Models.Theater", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Capacity");

                    b.Property<int>("Number");

                    b.Property<int>("RowNumbers");

                    b.Property<int>("SeatNumbers");

                    b.HasKey("Id");

                    b.ToTable("Theaters");
                });

            modelBuilder.Entity("cendracine.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .HasMaxLength(200);

                    b.Property<string>("Password")
                        .HasMaxLength(200);

                    b.Property<string>("Role");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("cendracine.Models.Billboard", b =>
                {
                    b.HasOne("cendracine.Models.User", "Owner")
                        .WithMany("Billboards")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("cendracine.Models.BillboardMovieRegister", b =>
                {
                    b.HasOne("cendracine.Models.Billboard", "Billboard")
                        .WithMany("BillboardMovieRegister")
                        .HasForeignKey("BillboardId");

                    b.HasOne("cendracine.Models.Movie", "Movie")
                        .WithMany("BillboardMovieRegister")
                        .HasForeignKey("MovieId");
                });

            modelBuilder.Entity("cendracine.Models.Movie", b =>
                {
                    b.HasOne("cendracine.Models.User", "Owner")
                        .WithMany("Movies")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("cendracine.Models.MovieCategory", b =>
                {
                    b.HasOne("cendracine.Models.Category", "Category")
                        .WithMany("MovieCategories")
                        .HasForeignKey("CategoryId");

                    b.HasOne("cendracine.Models.Movie", "Movie")
                        .WithMany("MovieCategories")
                        .HasForeignKey("MovieId");
                });

            modelBuilder.Entity("cendracine.Models.Projection", b =>
                {
                    b.HasOne("cendracine.Models.Movie", "Movie")
                        .WithMany("Projections")
                        .HasForeignKey("MovieId");

                    b.HasOne("cendracine.Models.Theater", "Theater")
                        .WithMany("Projections")
                        .HasForeignKey("TheaterId");
                });

            modelBuilder.Entity("cendracine.Models.Reservation", b =>
                {
                    b.HasOne("cendracine.Models.User", "Owner")
                        .WithMany("Reservations")
                        .HasForeignKey("OwnerId");

                    b.HasOne("cendracine.Models.Projection", "Projection")
                        .WithMany("Reservations")
                        .HasForeignKey("ProjectionId");

                    b.HasOne("cendracine.Models.Seat", "Seat")
                        .WithMany("Reservations")
                        .HasForeignKey("SeatId");
                });

            modelBuilder.Entity("cendracine.Models.Seat", b =>
                {
                    b.HasOne("cendracine.Models.Theater", "Theater")
                        .WithMany("Seats")
                        .HasForeignKey("TheaterId");
                });
#pragma warning restore 612, 618
        }
    }
}
